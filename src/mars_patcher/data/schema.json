{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Metroid Fusion patching schema",
    "description": "A json schema describing the input for patching Metroid Fusion via mars_patcher.",
    "type": "object",
    "properties": {
        "SeedHash": {
            "description": "A seed hash that will be displayed on the file select screen.",
            "type": "string",
            "pattern": "^[0-9A-Z]{8}$"
        },
        "Locations": {
            "type": "object",
            "description": "Specifies how the item locations in the game should be changed.",
            "properties": {
                "MajorLocations": {
                    "type": "array",
                    "description": "Specifies how the major item locations should be changed. A major item location is a location where an item is obtained by defeating a boss or interacting with a device.",
                    "minItems": 20,
                    "maxItems": 20,
                    "uniqueItems": true,
                    "items": {
                        "type": "object",
                        "properties": {
                            "Source": {
                                "$ref": "#/$defs/ValidSources"
                            },
                            "Item": {
                                "$ref": "#/$defs/ValidItems"
                            }
                        },
                        "required": ["Source", "Item"]
                    }
                },
                "MinorLocations": {
                    "type": "array",
                    "description": "Specifies how the minor item locations should be changed. A minor item location is a location where an item is obtained by touching a tank block.",
                    "minItems": 100,
                    "maxItems": 100,
                    "uniqueItems": true,
                    "items": {
                        "type": "object",
                        "properties": {
                            "Area": {
                                "$ref": "#/$defs/TypeU8",
                                "description": "The area ID where this item is located."
                            },
                            "Room": {
                                "$ref": "#/$defs/TypeU8",
                                "description": "The room ID where this item is located."
                            },
                            "BlockX": {
                                "$ref": "#/$defs/TypeU8",
                                "description": "The X-coordinate in the room where this item is located."
                            },
                            "BlockY": {
                                "$ref": "#/$defs/TypeU8",
                                "description": "The Y-coordinate in the room where this item is located."
                            },
                            "Item": {
                                "$ref": "#/$defs/ValidItems"
                            },
                            "ItemSprite": {
                                "$ref": "#/$defs/ValidItemSprites"
                            }
                        },
                        "required": ["Area", "Room", "BlockX", "BlockY", "Item"]
                    }
                }
            },
            "required": ["MinorLocations", "MajorLocations"]
        },
        "RequiredMetroidCount": {
            "type": "integer",
            "description": "The number of infant Metroids that must be collected to beat the game.",
            "minimum": 0,
            "maximum": 20
        },
        "StartingLocation": {
            "type": "object",
            "description": "The location the player should spawn at the start of the game.",
            "properties": {
                "Area": {
                    "$ref": "#/$defs/TypeU8",
                    "description": "The area ID of the starting location."
                },
                "Room": {
                    "$ref": "#/$defs/TypeU8",
                    "description": "The room ID of the starting location."
                },
                "BlockX": {
                    "$ref": "#/$defs/TypeU8",
                    "description": "The X-coordinate in the room where the player should spawn."
                },
                "BlockY": {
                    "$ref": "#/$defs/TypeU8",
                    "description": "The Y-coordinate in the room where the player should spawn."
                }
            }
        },
        "StartingItems": {
            "type": "object",
            "properties": {
                "Energy": {
                    "type": "integer",
                    "description": "How much energy the player should start with on a new save file.",
                    "minimum": 1,
                    "maximum": 2099,
                    "default": 99
                },
                "Missiles": {
                    "type": "integer",
                    "description": "How many missiles the player should start with on a new save file (the amount unlocked by collecting missile data).",
                    "minimum": 0,
                    "maximum": 999,
                    "default": 10
                },
                "PowerBombs": {
                    "type": "integer",
                    "description": "How many power bombs the player should start with on a new save file (the amount unlocked by collecting power bomb data).",
                    "minimum": 0,
                    "maximum": 99,
                    "default": 10
                },
                "Abilities": {
                    "type": "array",
                    "description": "Which abilities the player should start with on a new save file.",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/$defs/ValidAbilities"
                    },
                    "default": []
                },
                "SecurityLevels": {
                    "type": "array",
                    "description": "Which security levels will be unlocked from the start.",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "enum": [0, 1, 2, 3, 4]
                    },
                    "default": [0]
                },
                "DownloadedMaps": {
                    "type": "array",
                    "description": "Which area maps will be downloaded from the start.",
                    "uniqueItems": true,
                    "items": {
                        "type": "integer",
                        "enum": [0, 1, 2, 3, 4, 5, 6]
                    },
                    "default": []
                }
            },
            "default": null
        },
        "TankIncrements": {
            "type": "object",
            "description": "How much ammo/health tanks provide when collected.",
            "properties": {
                "MissileTank": {
                    "type": "integer",
                    "description": "How much ammo missile tanks provide when collected.",
                    "minimum": -1000,
                    "maximum": 1000,
                    "default": 5
                },
                "EnergyTank": {
                    "type": "integer",
                    "description": "How much health energy tanks provide when collected.",
                    "minimum": -2100,
                    "maximum": 2100,
                    "default": 100
                },
                "PowerBombTank": {
                    "type": "integer",
                    "description": "How much ammo power bomb tanks provide when collected.",
                    "minimum": -100,
                    "maximum": 100,
                    "default": 2
                }
            },
            "required": ["MissileTank", "EnergyTank", "PowerBombTank"],
            "default": null
        },
        "Palettes": {
            "type": "object",
            "description": "Properties for randomized in-game palettes.",
            "properties": {
                "Seed": {
                    "$ref": "#/$defs/Seed",
                    "description": "A number used to initialize the random number generator for palettes. If not specified, the patcher will randomly generate one.",
                    "default": null
                },
                "Randomize": {
                    "type": "object",
                    "description": "What kind of palettes should be randomized.",
                    "propertyNames": {
                        "type": "string",
                        "enum": ["Tilesets", "Enemies", "Samus", "Beams"]
                    },
                    "additionalProperties": {
                        "type": "object",
                        "description": "The range to use for rotating palette hues.",
                        "properties": {
                            "HueMin": {
                                "$ref": "#/$defs/HueRotation",
                                "description": "The minimum value to use for rotating palette hues. If not specified, the patcher will randomly generate one.",
                                "default": null
                            },
                            "HueMax": {
                                "$ref": "#/$defs/HueRotation",
                                "description": "The maximum value to use for rotating palette hues. If not specified, the patcher will randomly generate one.",
                                "default": null
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "ColorSpace": {
                    "type": "string",
                    "description": "The color space to use for rotating palette hues.",
                    "enum": ["HSV", "Oklab"],
                    "default": "Oklab"
                }
            },
            "additionalProperties": false,
            "required": ["Randomize"],
            "default": null
        },
        "Hints": {
            "type": "object",
            "description": "Specifies hints to be displayed at navigation rooms.",
            "propertyNames": {
                "$ref": "#/$defs/ValidLanguages"
            },
            "additionalProperties": {
                "type": "object",
                "description": "Assigns each navigation room a specific hint.",
                "minProperties": 11,
                "maxProperties": 11,
                "properties": {
                    "MainDeckWest": { "type": "string" },
                    "MainDeckEast": { "type": "string" },
                    "OperationsDeck": { "type": "string" },
                    "Sector1Entrance": { "type": "string" },
                    "Sector2Entrance": { "type": "string" },
                    "Sector3Entrance": { "type": "string" },
                    "Sector4Entrance": { "type": "string" },
                    "Sector5Entrance": { "type": "string" },
                    "Sector6Entrance": { "type": "string" },
                    "AuxiliaryPower": { "type": "string" },
                    "RestrictedLabs": { "type": "string" }
                },
                "additionalProperties": false
            },
            "default": null
        },
        "SkipDoorTransitions": {
            "type": "boolean",
            "description": "Makes all door transitions instant when true.",
            "default": false
        }
    },
    "required": ["SeedHash", "Locations", "RequiredMetroidCount"],
    "$defs": {
        "TypeU8": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255
        },
        "Seed": {
            "type": "integer",
            "minimum": 0,
            "maximum": 2147483647
        },
        "HueRotation": {
            "type": "integer",
            "minimum": 0,
            "maximum": 180
        },
        "ValidSources": {
            "type": "string",
            "description": "Valid major locations.",
            "enum": [
                "MainDeckData",
                "Arachnus",
                "ChargeCoreX",
                "Level1",
                "TroData",
                "Zazabi",
                "Serris",
                "Level2",
                "PyrData",
                "MegaX",
                "Level3",
                "ArcData1",
                "WideCoreX",
                "ArcData2",
                "Yakuza",
                "Nettori",
                "Nightmare",
                "Level4",
                "AqaData",
                "WaveCoreX",
                "Ridley"
            ]
        },
        "ValidItems": {
            "type": "string",
            "description": "Valid items for shuffling.",
            "enum": [
                "None",
                "Level0",
                "Missiles",
                "MorphBall",
                "ChargeBeam",
                "Level1",
                "Bombs",
                "HiJump",
                "SpeedBooster",
                "Level2",
                "SuperMissiles",
                "VariaSuit",
                "Level3",
                "IceMissiles",
                "WideBeam",
                "PowerBombs",
                "SpaceJump",
                "PlasmaBeam",
                "GravitySuit",
                "Level4",
                "DiffusionMissiles",
                "WaveBeam",
                "ScrewAttack",
                "IceBeam",
                "MissileTank",
                "EnergyTank",
                "PowerBombTank",
                "IceTrap",
                "InfantMetroid"
            ]
        },
        "ValidItemSprites": {
            "type": "string",
            "description": "Valid graphics for minor location items.",
            "enum": [
                "Empty",
                "Missiles",
                "Level0",
                "MorphBall",
                "ChargeBeam",
                "Level1",
                "Bombs",
                "HiJump",
                "SpeedBooster",
                "Level2",
                "SuperMissiles",
                "VariaSuit",
                "Level3",
                "IceMissiles",
                "WideBeam",
                "PowerBombs",
                "SpaceJump",
                "PlasmaBeam",
                "GravitySuit",
                "Level4",
                "DiffusionMissiles",
                "WaveBeam",
                "ScrewAttack",
                "IceBeam",
                "MissileTank",
                "EnergyTank",
                "PowerBombTank",
                "Anonymous",
                "ShinyMissileTank",
                "ShinyPowerBombTank",
                "InfantMetroid"
            ]
        },
        "ValidAbilities": {
            "type": "string",
            "description": "Valid abilities to start with.",
            "enum": [
                "Missiles",
                "MorphBall",
                "ChargeBeam",
                "Bombs",
                "HiJump",
                "SpeedBooster",
                "SuperMissiles",
                "VariaSuit",
                "IceMissiles",
                "WideBeam",
                "PowerBombs",
                "SpaceJump",
                "PlasmaBeam",
                "GravitySuit",
                "DiffusionMissiles",
                "WaveBeam",
                "ScrewAttack",
                "IceBeam"
            ]
        },
        "ValidLanguages": {
            "type": "string",
            "description": "Valid languages supported by the game.",
            "enum": [
                "JapaneseKanji",
                "JapaneseHiragana",
                "English",
                "German",
                "French",
                "Italian",
                "Spanish"
            ]
        }
    }
}
